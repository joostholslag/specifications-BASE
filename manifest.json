{
    "id": "BASE",
    "title": "Base Model",
    "description": "openEHR Base Model Component",
    "keywords": "base models, base model, openehr",
    "specifications": [
        {
            "id": "architecture_overview",
            "title": "Architecture Overview",
            "title_short": "Architecture Overview",
            "description": "openEHR Architecture Overview",
            "summary": "\"Read me first\" document for the overall architecture. Provides a summary of the reference, archetype and service models, and describes global semantics.",
            "micro_summary": "Global description of openEHR design principles and architecture",
            "copyright_year": "2003",
            "spec_status": "STABLE",
            "keywords": "EHR, openehr, architecture"
        },
        {
            "id": "foundation_types",
            "title": "Foundation Types",
            "title_short": "Foundation Types",
            "description": "openEHR Foundation Types specification",
            "summary": "Specification of assumed, primitive and other foundation types required by all other openEHR specifications.",
            "micro_summary": "Values, Structures, Interval, Date/times",
            "copyright_year": "2017",
            "spec_status": "STABLE",
            "keywords": "openehr, identifiers, types"
        },
        {
            "id": "base_types",
            "title": "Base Types",
            "title_short": "Base Types",
            "description": "openEHR Base Types specification",
            "summary": "Specification of basic openEHR and health informatics types used in other openEHR specifications.",
            "micro_summary": "Definitions, Identifiers",
            "copyright_year": "2016",
            "spec_status": "STABLE",
            "keywords": "openehr, identifiers, types"
        },
        {
            "id": "resource",
            "title": "Resource Model",
            "title_short": "Resource Model",
            "description": "openEHR Resource Model specification",
            "summary": "The Resource specification defines a formal model of authoring and IP meta-data, language translation and annotations that can be used by classes defining any concrete type of authored resource, such as a document, archetype or template.",
            "micro_summary": "Authoring resources and translations",
            "classes": [
                "AUTHORED_RESOURCE"
            ],
            "copyright_year": "2003",
            "spec_status": "STABLE",
            "keywords": "openehr, resources"
        },
        {
            "id": "odin",
            "title": "Object Data Instance Notation (ODIN)",
            "title_short": "ODIN",
            "description": "Object Data Instance Notation (ODIN) specification",
            "summary": "This is the JSON-like notation used to express various sections of ADL archetypes including description, terminology and annotations, and also BMM files.",
            "micro_summary": "Object Data Instance Notation",
            "copyright_year": "2003",
            "spec_status": "STABLE",
            "keywords": "data, notation, JSON, syntax"
        },
        {
            "id": "bmm",
            "title": "Basic Meta-Model (BMM)",
            "title_short": "BMM",
            "description": "Basic Meta-Model (BMM) specification",
            "summary": "BMM provides a human- and machine-readable / writable format for defining object models. It can be considered a much more compact and readable alternative to XMI.",
            "micro_summary": "Basic Meta-Model of models & expressions",
            "copyright_year": "2016",
            "spec_status": "TRIAL",
            "keywords": "reflection, meta-model, UML"
        },
        {
            "id": "bmm_persistence",
            "title": "BMM Persistence Model and Syntax",
            "title_short": "P_BMM",
            "description": "BMM Persistence Model and Syntax",
            "summary": "A human-readable and machine-processable save format for BMM.",
            "micro_summary": "BMM human-readable serial format",
            "copyright_year": "2016",
            "spec_status": "STABLE",
            "keywords": "reflection, meta-model, UML"
        },
        {
            "id": "expression",
            "title": "Expression Language (EL)",
            "title_short": "Expression Language",
            "description": "openEHR Expression Language specification",
            "summary": "The openEHR Expression Language defines an extensible core model and syntax for specifying expressions for particular purposes elsewhere in openEHR.",
            "micro_summary": "A syntax for formal expressions",
            "copyright_year": "2016",
            "spec_status": "DEVELOPMENT",
            "keywords": "openehr, expressions, rules"
        },
        {
            "id": "iso_18308_conformance_statement",
            "title": "ISO 18308 Conformance Statement",
            "title_short": "ISO 18308 Conformance",
            "description": "ISO 18308 Conformance Statement",
            "summary": "Document describing conformance of openEHR architecture to ISO TS 18308, \"Requirements for EHR Architectures\".",
            "link": "https://specifications.openehr.org/releases/1.0.2/requirements/iso18308_conformance.pdf",
            "copyright_year": "2003",
            "spec_status": "STABLE",
            "keywords": "EHR, conformance"
        }
    ],
    "expressions": [
        {
            "id": "openEHR_UML-BASE.mdzip",
            "type": "uml",
            "title": "Base UML",
            "description": "UML file for openEHR Base classes, as MagicDraw 19. Contains UML 2.5 standard XMI file."
        }
    ],
    "jira": {
        "open_issues": "11105",
        "roadmap": "SPECBASE"
    },
    "releases": [
        {
            "id": "1.0.4",
            "date": "2018-07-14",
            "jira": {
                "crs": "SPECBASE/versions/11360",
                "prs": "SPECPR/versions/11860"
            }
        },
		{
            "id": "1.0.3",
            "date": "2015-12-15",
            "jira": {
                "crs": "SPECBASE/versions/11360",
                "prs": "SPECPR/versions/11860"
            }
        }
    ]
}
